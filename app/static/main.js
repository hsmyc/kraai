function H(B,E,k){B.clear();for(let I of E)I.removeDependency(k);E.clear()}function J(B,E,k){for(let I of B)I(k);for(let I of E)I.recompute()}function K(B,E){B.add(E)}function P(B,E){console.log(B,E),B.delete(E)}function M(B){let E=structuredClone(B);const k=new Set,I=new Set,x={get(){if(j)j.addDependency(x),K(I,j);return E},set(L){if(E!==L)E=structuredClone(L),J(k,I,E)},subscribe(L){return k.add(L),L(E),()=>{if(k.delete(L),k.size===0&&I.size===0)H(k,I,x)}}};return[x.get,x.set,x.subscribe]}function N(B){let E;const k=new Set,I=new Set,x=new Set,L={get(){if(j&&j!==L)j.addDependency(L),K(x,j);return E},set(T){throw new Error("Cannot set value of a computed state")},subscribe(T){return k.add(T),T(E),()=>{if(k.delete(T),k.size===0&&I.size===0&&x.size===0)H(k,x,L)}},recompute(){for(let O of I)P(x,O);I.clear();const T=j;j=L;const G=B();if(j=T,E!==G)E=structuredClone(G),J(k,x,E)},addDependency(T){I.add(T)},removeDependency(T){I.delete(T)}};return L.recompute(),[L.get,L.subscribe]}var j=null;function $(){A(q()+1)}function z(B,E){E(B()+2)}function h(){A(q()-1)}function D(B){U.innerText=B}function F(B){W.innerText=B}var[q,A,Q]=M(0),[y,R]=N(()=>q()*2),U=document.getElementById("count"),W=document.getElementById("scount"),X=document.getElementById("increment"),Y=document.getElementById("decrement"),Z=document.getElementById("dincrement");X?.addEventListener("click",$);Z?.addEventListener("click",()=>z(q,A));Y?.addEventListener("click",h);Q(D);R(F);
